apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infominerva.fullname" . }}-backend
  labels:
    {{- include "infominerva.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "infominerva.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "infominerva.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "infominerva.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.backend.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          workingDir: /app/Backend # Added from docker-compose working_dir
          command: ["uvicorn"]
          args:
            - "main:app"
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "8000"  # From docker-compose. Ensure {{ .Values.backend.service.targetPort }} matches if they are the same logical port.
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }} # Should ideally match the port in args (e.g., 8000)
              protocol: TCP
          resources:
            requests:
              cpu: "100m"
              memory: "250Mi"
            limits:
              cpu: "100m"
              memory: "250Mi"
          {{- if .Values.secrets.create }}
          envFrom:
            - secretRef:
                name: {{ include "infominerva.fullname" . }}-{{ .Values.secrets.backend.nameSuffix }}
          {{- end }}
          {{- if .Values.backend.env }}
          env:
            {{- range .Values.backend.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}